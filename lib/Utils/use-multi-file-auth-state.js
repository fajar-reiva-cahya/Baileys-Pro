var __importDefault=this&&this.__importDefault||function(c){return c&&c.__esModule?c:{"default":c}};Object.defineProperty(exports,"__esModule",{value:!0});exports.useMultiFileAuthState=void 0;
const async_lock_1=__importDefault(require("async-lock")),promises_1=require("fs/promises"),path_1=require("path"),WAProto_1=require("../../WAProto"),auth_utils_1=require("./auth-utils"),generics_1=require("./generics"),fileLock=new async_lock_1.default({maxPending:Infinity}),useMultiFileAuthState=async c=>{const h=(b,a)=>{const d=(0,path_1.join)(c,g(a));return fileLock.acquire(d,()=>(0,promises_1.writeFile)((0,path_1.join)(d),JSON.stringify(b,generics_1.BufferJSON.replacer)))},k=async b=>{try{const a=
(0,path_1.join)(c,g(b)),d=await fileLock.acquire(a,()=>(0,promises_1.readFile)(a,{encoding:"utf-8"}));return JSON.parse(d,generics_1.BufferJSON.reviver)}catch(a){return null}},p=async b=>{try{const a=(0,path_1.join)(c,g(b));await fileLock.acquire(a,()=>(0,promises_1.unlink)(a))}catch(a){}},l=await (0,promises_1.stat)(c).catch(()=>{});if(l){if(!l.isDirectory())throw Error(`found something that is not a directory at ${c}, either delete it or specify a different location`);}else await (0,promises_1.mkdir)(c,
{recursive:!0});const g=b=>{var a;return null===(a=null===b||void 0===b?void 0:b.replace(/\//g,"__"))||void 0===a?void 0:a.replace(/:/g,"-")},m=await k("creds.json")||(0,auth_utils_1.initAuthCreds)();return{state:{creds:m,keys:{get:async(b,a)=>{const d={};await Promise.all(a.map(async f=>{let e=await k(`${b}-${f}.json`);"app-state-sync-key"===b&&e&&(e=WAProto_1.proto.Message.AppStateSyncKeyData.fromObject(e));d[f]=e}));return d},set:async b=>{const a=[];for(const d in b)for(const f in b[d]){const e=
b[d][f],n=`${d}-${f}.json`;a.push(e?h(e,n):p(n))}await Promise.all(a)}}},saveCreds:()=>h(m,"creds.json")}};exports.useMultiFileAuthState=useMultiFileAuthState;
